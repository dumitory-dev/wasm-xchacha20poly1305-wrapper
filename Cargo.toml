[package]
name = "wasm-xchacha20poly1305-wrapper"
version = "0.1.0"
authors = ["dumitory-dev"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
chacha20poly1305 = {version= "0.10.1", features=["std"]}
getrandom = { version = "0.2", features = ["js", "std"] }
js-sys = "0.3.35"
thiserror = "1.0.24"
wasm-bindgen-futures = "0.4.34"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"
criterion = "0.4.0"

[[bench]]
name = "crypto_benchmark"
harness = false

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
